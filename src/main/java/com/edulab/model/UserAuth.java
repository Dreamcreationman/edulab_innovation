package com.edulab.model;

import com.edulab.model_base.BaseUserAuth;
import com.edulab.utils.FormatCheckUtils;
import com.jfinal.plugin.activerecord.Db;

import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class UserAuth extends BaseUserAuth<UserAuth> {

    public static final UserAuth dao = new UserAuth();

    /**
     * 根据用户凭证获取加密后的密码
     *
     * @param identifier
     * @return
     */
    public String getSaltedCredential(String identifier) {
        String sql = "select * from edu_user_auths where identityType = ? and identifier = ? ";
        return Db.findFirst(sql, FormatCheckUtils.identifierType(identifier), identifier).getStr("credential");
    }

    /**
     * 根据用户凭证获取盐值
     *
     * @param identifier
     * @return
     */
    public String getSaltSQL(String identifier) {
        String sql = "select * from edu_user_auths where identityType = ? and identifier = ? ";
        return Db.findFirst(sql, FormatCheckUtils.identifierType(identifier), identifier).getStr("salt");
    }

    /**
     * 根据用户凭证判断用户是否存在
     *
     * @param identifier
     * @return
     */
    public boolean isUserExists(String identifier) {
        String sql = "select * from edu_user_auths where identityType = ? and identifier = ? ";
        String identifyType = FormatCheckUtils.identifierType(identifier);
        List<UserAuth> userAuth = find(sql, identifyType, identifier);
        if (userAuth != null && userAuth.size() != 0) {
            return true;
        }
        return false;
    }

    /**
     * 根据用户名查找用户ID，前提是用户存在
     *
     * @param identifier
     * @return -1表示用户不存在
     */
    public int getIdByIdentifier(String identifier) {
        int id = -1;
        String sql = "select * from edu_user_auths where identityType = ? and identifier = ? ";
        String identifyType = FormatCheckUtils.identifierType(identifier);
        List<UserAuth> userAuth = find(sql, identifyType, identifier);
        if (userAuth != null && userAuth.size() != 0) {
            id = userAuth.get(0).getUserId();
        }
        return id;
    }

}
